// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test order component of dashboard renders correctly 1`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction],
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": "Confirm",
                      "mealName": "",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": "",
                      "price": "",
                      "quantity": "",
                      "statusModal": "modal",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction],
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": "Confirm",
                          "mealName": "",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": "",
                          "price": "",
                          "quantity": "",
                          "statusModal": "modal",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should change state when component receive new props 1`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          />
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              confirmed
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should change state when component receive new props 2`] = `
Orders {
  "cancelOrder": [Function],
  "confirmStatus": [Function],
  "context": Object {},
  "handleClick": [Function],
  "handleClose": [Function],
  "modify": [Function],
  "onChange": [Function],
  "props": Object {
    "actions": Object {
      "clearMessages": [MockFunction],
      "getUser": [MockFunction],
    },
    "errorMessage": Object {
      "createMealError": "",
    },
    "mealActions": Object {
      "createMeal": [MockFunction],
      "getAllMeals": [MockFunction],
    },
    "meals": Array [],
    "menu": Array [],
    "menuActions": Object {
      "getMenu": [MockFunction],
    },
    "mostOrder": Array [
      Object {
        "Meal": Object {
          "descrption": "",
          "id": 1,
          "name": "",
          "price": "",
        },
        "id": "",
      },
    ],
    "myOrder": Array [
      Object {
        "Meal": Object {
          "descrption": "Very delicious",
          "id": 1,
          "name": "rice",
          "price": "200",
        },
        "address": "Reverend Street",
        "createdAt": "2018-05-4",
        "id": 1,
        "quantity": 3,
        "status": "confirmed",
        "updatedAt": "2018-05-4",
      },
    ],
    "notifics": Array [
      Object {},
    ],
    "orderActions": Object {
      "getMyOrder": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "orderMeal": [MockFunction],
      "updateOrder": [MockFunction],
    },
    "successMessage": Object {
      "createMealSuccess": "",
    },
    "user": Object {},
  },
  "refs": Object {},
  "state": Object {
    "address": "",
    "confirmButton": "Confirm",
    "mealName": "",
    "modal": "modal",
    "modifyError": "",
    "modifyOrder": "Modify",
    "open": false,
    "orderId": "",
    "price": "",
    "quantity": "",
    "statusModal": "modal",
    "totalPrice": "",
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_element": <Orders
        actions={
          Object {
            "clearMessages": [MockFunction],
            "getUser": [MockFunction],
          }
        }
        errorMessage={
          Object {
            "createMealError": "",
          }
        }
        mealActions={
          Object {
            "createMeal": [MockFunction],
            "getAllMeals": [MockFunction],
          }
        }
        meals={Array []}
        menu={Array []}
        menuActions={
          Object {
            "getMenu": [MockFunction],
          }
        }
        mostOrder={
          Array [
            Object {
              "Meal": Object {
                "descrption": "",
                "id": 1,
                "name": "",
                "price": "",
              },
              "id": "",
            },
          ]
        }
        myOrder={
          Array [
            Object {
              "Meal": Object {
                "descrption": "Very delicious",
                "id": 1,
                "name": "rice",
                "price": "200",
              },
              "address": "Reverend Street",
              "createdAt": "2018-05-4",
              "id": 1,
              "quantity": 3,
              "status": "confirmed",
              "updatedAt": "2018-05-4",
            },
          ]
        }
        notifics={
          Array [
            Object {},
          ]
        }
        orderActions={
          Object {
            "getMyOrder": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "orderMeal": [MockFunction],
            "updateOrder": [MockFunction],
          }
        }
        successMessage={
          Object {
            "createMealSuccess": "",
          }
        }
        user={Object {}}
      />,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_newState": null,
      "_rendered": <div
        className="order-wrapper order-container"
      >
        <div
          style={
            Object {
              "margin": "1rem 1rem 1rem 1rem",
            }
          }
        >
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
              style={
                Object {
                  "margin": "1rem 1rem 1rem 1rem",
                }
              }
            >
              <p
                className="justify l-r-pad-text"
              >
                 Confirm that you have received  
                
              </p>
            </div>
            <div
              className="modal-order-content"
            >
              <button
                className="remove-modal confirmStatus"
                onClick={[Function]}
              >
                Confirm
              </button>
              <button
                className="remove-modal"
                onClick={[Function]}
              >
                Cancel
              </button>
            </div>
          </div>
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
            >
              <p
                className="justify l-r-pad-text"
              >
                Edit the field to modify this order
                <br />
                NB This order can only be modified 
                <br />
                within ONE hour after it is created
                <h4
                  className="danger text-center"
                >
                  
                </h4>
              </p>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Name: 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Price per Meal(#): 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Quantity: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="quantity"
                  name="quantity"
                  onChange={[Function]}
                  type="number"
                  value=""
                />
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text address"
              >
                 Address: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="address"
                  name="address"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </span>
            </div>
            <div
              className="modal-order-content"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal modify"
                  onClick={[Function]}
                >
                  Modify
                </button>
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal cancel"
                  onClick={[Function]}
                >
                  Cancel
                </button>
              </span>
            </div>
          </div>
          <h2
            style={
              Object {
                "marginTop": "4rem",
              }
            }
          >
            MY MEAL ORDER HISTORY
          </h2>
          <h3
            className="danger text-center"
          >
            <b />
          </h3>
          <table>
            <tbody>
              <tr>
                <th>
                  id
                </th>
                <th>
                  Name
                </th>
                <th>
                  Quanitity odered
                </th>
                <th>
                  Price ($)
                </th>
                <th>
                  Total price ( price * quantity)
                </th>
                <td>
                  Date
                </td>
                <td>
                  Address
                </td>
                <td>
                  Status
                </td>
                <td>
                  Modify
                </td>
              </tr>
              <tr>
                <td>
                  1
                </td>
                <td>
                  rice
                </td>
                <td>
                  3
                </td>
                <td>
                  200
                </td>
                <td />
                <td>
                  May
                    
                  4
                    
                  2018
                </td>
                <td>
                  Reverend Street
                </td>
                <td>
                  <span>
                    confirmed
                  </span>
                </td>
                <td>
                  <button
                    className="p-color modify-btn"
                    onClick={[Function]}
                  >
                    Modify
                  </button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>,
      "_rendering": false,
      "_updater": [Circular],
    },
  },
}
`;

exports[`Test order component of dashboard should change state when component receive new props 3`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          />
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              confirmed
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should change state when component receive new props 4`] = `
Orders {
  "cancelOrder": [Function],
  "confirmStatus": [Function],
  "context": Object {},
  "handleClick": [Function],
  "handleClose": [Function],
  "modify": [Function],
  "onChange": [Function],
  "props": Object {
    "actions": Object {
      "clearMessages": [MockFunction],
      "getUser": [MockFunction],
    },
    "errorMessage": Object {
      "createMealError": "",
    },
    "mealActions": Object {
      "createMeal": [MockFunction],
      "getAllMeals": [MockFunction],
    },
    "meals": Array [],
    "menu": Array [],
    "menuActions": Object {
      "getMenu": [MockFunction],
    },
    "mostOrder": Array [
      Object {
        "Meal": Object {
          "descrption": "",
          "id": 1,
          "name": "",
          "price": "",
        },
        "id": "",
      },
    ],
    "myOrder": Array [
      Object {
        "Meal": Object {
          "descrption": "Very delicious",
          "id": 1,
          "name": "rice",
          "price": "200",
        },
        "address": "Reverend Street",
        "createdAt": "2018-05-4",
        "id": 1,
        "quantity": 3,
        "status": "confirmed",
        "updatedAt": "2018-05-4",
      },
    ],
    "notifics": Array [
      Object {},
    ],
    "orderActions": Object {
      "getMyOrder": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "orderMeal": [MockFunction],
      "updateOrder": [MockFunction],
    },
    "successMessage": Object {
      "createMealSuccess": "",
    },
    "user": Object {},
  },
  "refs": Object {},
  "state": Object {
    "address": "",
    "confirmButton": "Confirm",
    "mealName": "",
    "modal": "modal",
    "modifyError": "",
    "modifyOrder": "Modify",
    "open": false,
    "orderId": "",
    "price": "",
    "quantity": "",
    "statusModal": "modal",
    "totalPrice": "",
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_element": <Orders
        actions={
          Object {
            "clearMessages": [MockFunction],
            "getUser": [MockFunction],
          }
        }
        errorMessage={
          Object {
            "createMealError": "",
          }
        }
        mealActions={
          Object {
            "createMeal": [MockFunction],
            "getAllMeals": [MockFunction],
          }
        }
        meals={Array []}
        menu={Array []}
        menuActions={
          Object {
            "getMenu": [MockFunction],
          }
        }
        mostOrder={
          Array [
            Object {
              "Meal": Object {
                "descrption": "",
                "id": 1,
                "name": "",
                "price": "",
              },
              "id": "",
            },
          ]
        }
        myOrder={
          Array [
            Object {
              "Meal": Object {
                "descrption": "Very delicious",
                "id": 1,
                "name": "rice",
                "price": "200",
              },
              "address": "Reverend Street",
              "createdAt": "2018-05-4",
              "id": 1,
              "quantity": 3,
              "status": "confirmed",
              "updatedAt": "2018-05-4",
            },
          ]
        }
        notifics={
          Array [
            Object {},
          ]
        }
        orderActions={
          Object {
            "getMyOrder": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "orderMeal": [MockFunction],
            "updateOrder": [MockFunction],
          }
        }
        successMessage={
          Object {
            "createMealSuccess": "",
          }
        }
        user={Object {}}
      />,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_newState": null,
      "_rendered": <div
        className="order-wrapper order-container"
      >
        <div
          style={
            Object {
              "margin": "1rem 1rem 1rem 1rem",
            }
          }
        >
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
              style={
                Object {
                  "margin": "1rem 1rem 1rem 1rem",
                }
              }
            >
              <p
                className="justify l-r-pad-text"
              >
                 Confirm that you have received  
                
              </p>
            </div>
            <div
              className="modal-order-content"
            >
              <button
                className="remove-modal confirmStatus"
                onClick={[Function]}
              >
                Confirm
              </button>
              <button
                className="remove-modal"
                onClick={[Function]}
              >
                Cancel
              </button>
            </div>
          </div>
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
            >
              <p
                className="justify l-r-pad-text"
              >
                Edit the field to modify this order
                <br />
                NB This order can only be modified 
                <br />
                within ONE hour after it is created
                <h4
                  className="danger text-center"
                >
                  
                </h4>
              </p>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Name: 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Price per Meal(#): 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Quantity: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="quantity"
                  name="quantity"
                  onChange={[Function]}
                  type="number"
                  value=""
                />
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text address"
              >
                 Address: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="address"
                  name="address"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </span>
            </div>
            <div
              className="modal-order-content"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal modify"
                  onClick={[Function]}
                >
                  Modify
                </button>
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal cancel"
                  onClick={[Function]}
                >
                  Cancel
                </button>
              </span>
            </div>
          </div>
          <h2
            style={
              Object {
                "marginTop": "4rem",
              }
            }
          >
            MY MEAL ORDER HISTORY
          </h2>
          <h3
            className="danger text-center"
          >
            <b />
          </h3>
          <table>
            <tbody>
              <tr>
                <th>
                  id
                </th>
                <th>
                  Name
                </th>
                <th>
                  Quanitity odered
                </th>
                <th>
                  Price ($)
                </th>
                <th>
                  Total price ( price * quantity)
                </th>
                <td>
                  Date
                </td>
                <td>
                  Address
                </td>
                <td>
                  Status
                </td>
                <td>
                  Modify
                </td>
              </tr>
              <tr>
                <td>
                  1
                </td>
                <td>
                  rice
                </td>
                <td>
                  3
                </td>
                <td>
                  200
                </td>
                <td />
                <td>
                  May
                    
                  4
                    
                  2018
                </td>
                <td>
                  Reverend Street
                </td>
                <td>
                  <span>
                    confirmed
                  </span>
                </td>
                <td>
                  <button
                    className="p-color modify-btn"
                    onClick={[Function]}
                  >
                    Modify
                  </button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>,
      "_rendering": false,
      "_updater": [Circular],
    },
  },
}
`;

exports[`Test order component of dashboard should change state when component receive new props 5`] = `
Orders {
  "cancelOrder": [Function],
  "confirmStatus": [Function],
  "context": Object {},
  "handleClick": [Function],
  "handleClose": [Function],
  "modify": [Function],
  "onChange": [Function],
  "props": Object {
    "actions": Object {
      "clearMessages": [MockFunction],
      "getUser": [MockFunction],
    },
    "errorMessage": Object {
      "createMealError": "",
    },
    "mealActions": Object {
      "createMeal": [MockFunction],
      "getAllMeals": [MockFunction],
    },
    "meals": Array [],
    "menu": Array [],
    "menuActions": Object {
      "getMenu": [MockFunction],
    },
    "mostOrder": Array [
      Object {
        "Meal": Object {
          "descrption": "",
          "id": 1,
          "name": "",
          "price": "",
        },
        "id": "",
      },
    ],
    "myOrder": Array [
      Object {
        "Meal": Object {
          "descrption": "Very delicious",
          "id": 1,
          "name": "rice",
          "price": "200",
        },
        "address": "Reverend Street",
        "createdAt": "2018-05-4",
        "id": 1,
        "quantity": 3,
        "status": "confirmed",
        "updatedAt": "2018-05-4",
      },
    ],
    "notifics": Array [
      Object {},
    ],
    "orderActions": Object {
      "getMyOrder": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "orderMeal": [MockFunction],
      "updateOrder": [MockFunction],
    },
    "successMessage": Object {
      "createMealSuccess": "",
    },
    "user": Object {},
  },
  "refs": Object {},
  "state": Object {
    "address": "",
    "confirmButton": "Confirm",
    "mealName": "",
    "modal": "modal",
    "modifyError": "",
    "modifyOrder": "Modify",
    "open": false,
    "orderId": "",
    "price": "",
    "quantity": "",
    "statusModal": "modal",
    "totalPrice": "",
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_element": <Orders
        actions={
          Object {
            "clearMessages": [MockFunction],
            "getUser": [MockFunction],
          }
        }
        errorMessage={
          Object {
            "createMealError": "",
          }
        }
        mealActions={
          Object {
            "createMeal": [MockFunction],
            "getAllMeals": [MockFunction],
          }
        }
        meals={Array []}
        menu={Array []}
        menuActions={
          Object {
            "getMenu": [MockFunction],
          }
        }
        mostOrder={
          Array [
            Object {
              "Meal": Object {
                "descrption": "",
                "id": 1,
                "name": "",
                "price": "",
              },
              "id": "",
            },
          ]
        }
        myOrder={
          Array [
            Object {
              "Meal": Object {
                "descrption": "Very delicious",
                "id": 1,
                "name": "rice",
                "price": "200",
              },
              "address": "Reverend Street",
              "createdAt": "2018-05-4",
              "id": 1,
              "quantity": 3,
              "status": "confirmed",
              "updatedAt": "2018-05-4",
            },
          ]
        }
        notifics={
          Array [
            Object {},
          ]
        }
        orderActions={
          Object {
            "getMyOrder": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "orderMeal": [MockFunction],
            "updateOrder": [MockFunction],
          }
        }
        successMessage={
          Object {
            "createMealSuccess": "",
          }
        }
        user={Object {}}
      />,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_newState": null,
      "_rendered": <div
        className="order-wrapper order-container"
      >
        <div
          style={
            Object {
              "margin": "1rem 1rem 1rem 1rem",
            }
          }
        >
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
              style={
                Object {
                  "margin": "1rem 1rem 1rem 1rem",
                }
              }
            >
              <p
                className="justify l-r-pad-text"
              >
                 Confirm that you have received  
                
              </p>
            </div>
            <div
              className="modal-order-content"
            >
              <button
                className="remove-modal confirmStatus"
                onClick={[Function]}
              >
                Confirm
              </button>
              <button
                className="remove-modal"
                onClick={[Function]}
              >
                Cancel
              </button>
            </div>
          </div>
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
            >
              <p
                className="justify l-r-pad-text"
              >
                Edit the field to modify this order
                <br />
                NB This order can only be modified 
                <br />
                within ONE hour after it is created
                <h4
                  className="danger text-center"
                >
                  
                </h4>
              </p>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Name: 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Price per Meal(#): 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Quantity: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="quantity"
                  name="quantity"
                  onChange={[Function]}
                  type="number"
                  value=""
                />
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text address"
              >
                 Address: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="address"
                  name="address"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </span>
            </div>
            <div
              className="modal-order-content"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal modify"
                  onClick={[Function]}
                >
                  Modify
                </button>
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal cancel"
                  onClick={[Function]}
                >
                  Cancel
                </button>
              </span>
            </div>
          </div>
          <h2
            style={
              Object {
                "marginTop": "4rem",
              }
            }
          >
            MY MEAL ORDER HISTORY
          </h2>
          <h3
            className="danger text-center"
          >
            <b />
          </h3>
          <table>
            <tbody>
              <tr>
                <th>
                  id
                </th>
                <th>
                  Name
                </th>
                <th>
                  Quanitity odered
                </th>
                <th>
                  Price ($)
                </th>
                <th>
                  Total price ( price * quantity)
                </th>
                <td>
                  Date
                </td>
                <td>
                  Address
                </td>
                <td>
                  Status
                </td>
                <td>
                  Modify
                </td>
              </tr>
              <tr>
                <td>
                  1
                </td>
                <td>
                  rice
                </td>
                <td>
                  3
                </td>
                <td>
                  200
                </td>
                <td />
                <td>
                  May
                    
                  4
                    
                  2018
                </td>
                <td>
                  Reverend Street
                </td>
                <td>
                  <span>
                    confirmed
                  </span>
                </td>
                <td>
                  <button
                    className="p-color modify-btn"
                    onClick={[Function]}
                  >
                    Modify
                  </button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>,
      "_rendering": false,
      "_updater": [Circular],
    },
  },
}
`;

exports[`Test order component of dashboard should close modify modal 1`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
          rice
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        >
          rice
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction] {
                          "calls": Array [
                            Array [
                              "",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": "Confirm",
                      "mealName": "rice",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": "",
                      "price": "",
                      "quantity": "",
                      "statusModal": "modal",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": "Confirm",
                          "mealName": "rice",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": "",
                          "price": "",
                          "quantity": "",
                          "statusModal": "modal",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  rice
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  rice
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should display close confirm-order modal 1`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order "
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
          rice
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        >
          rice
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction] {
                          "calls": Array [
                            Array [
                              "",
                            ],
                            Array [
                              1,
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": "Confirm",
                      "mealName": "rice",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": 1,
                      "price": "",
                      "quantity": "",
                      "statusModal": "",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "",
                                  ],
                                  Array [
                                    1,
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": "Confirm",
                          "mealName": "rice",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": 1,
                          "price": "",
                          "quantity": "",
                          "statusModal": "",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order "
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  rice
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  rice
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should display close confirm-order modal 2`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
          rice
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        >
          rice
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction] {
                          "calls": Array [
                            Array [
                              "",
                            ],
                            Array [
                              1,
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": "Confirm",
                      "mealName": "rice",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": "",
                      "price": "",
                      "quantity": "",
                      "statusModal": "modal",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "",
                                  ],
                                  Array [
                                    1,
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": "Confirm",
                          "mealName": "rice",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": "",
                          "price": "",
                          "quantity": "",
                          "statusModal": "modal",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  rice
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  rice
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should display confirm-order modal 1`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order "
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
          rice
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        >
          rice
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction] {
                          "calls": Array [
                            Array [
                              "",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": "Confirm",
                      "mealName": "rice",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": 1,
                      "price": "",
                      "quantity": "",
                      "statusModal": "",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "",
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": "Confirm",
                          "mealName": "rice",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": 1,
                          "price": "",
                          "quantity": "",
                          "statusModal": "",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order "
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  rice
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  rice
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should display confirm-order modal 2`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order "
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
          rice
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          <div>
            <i
              aria-hidden="true"
              className="fa fa-spinner fa-spin fa-2x fa-fw"
            />
          </div>
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        >
          rice
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction] {
                          "calls": Array [
                            Array [
                              "",
                            ],
                            Array [
                              1,
                            ],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": <div>
                        <i
                          aria-hidden="true"
                          className="fa fa-spinner fa-spin fa-2x fa-fw"
                        />
                      </div>,
                      "mealName": "rice",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": 1,
                      "price": "",
                      "quantity": "",
                      "statusModal": "",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "",
                                  ],
                                  Array [
                                    1,
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": <div>
                            <i
                              aria-hidden="true"
                              className="fa fa-spinner fa-spin fa-2x fa-fw"
                            />
                          </div>,
                          "mealName": "rice",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": 1,
                          "price": "",
                          "quantity": "",
                          "statusModal": "",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order "
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  rice
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  <div>
                                    <i
                                      aria-hidden="true"
                                      className="fa fa-spinner fa-spin fa-2x fa-fw"
                                    />
                                  </div>
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  rice
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should modify an order 1`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
          rice
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order "
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          />
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        >
          rice
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        >
          200
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value={3}
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value="Reverend Street"
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            <div>
              <i
                aria-hidden="true"
                className="fa fa-spinner fa-spin fa-2x fa-fw"
              />
            </div>
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              confirmed
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should respond to a click event and dislay a modal 1`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order "
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
          rice
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        >
          rice
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction],
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": "Confirm",
                      "mealName": "rice",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": 1,
                      "price": "",
                      "quantity": "",
                      "statusModal": "",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction],
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": "Confirm",
                          "mealName": "rice",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": 1,
                          "price": "",
                          "quantity": "",
                          "statusModal": "",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order "
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  rice
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  rice
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should respond to a click event and dislay a modal 2`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
          rice
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order "
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        >
          rice
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        >
          200
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value={3}
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value="Reverend Street"
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction],
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "Reverend Street",
                      "confirmButton": "Confirm",
                      "mealName": "rice",
                      "modal": "",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": 1,
                      "price": "200",
                      "quantity": 3,
                      "statusModal": "modal",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction],
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "Reverend Street",
                          "confirmButton": "Confirm",
                          "mealName": "rice",
                          "modal": "",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": 1,
                          "price": "200",
                          "quantity": 3,
                          "statusModal": "modal",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  rice
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order "
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  rice
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  200
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value={3}
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value="Reverend Street"
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should respond to a mouse hover event and dislay a poppover 1`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction],
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": "Confirm",
                      "mealName": "",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": true,
                      "orderId": "",
                      "price": "",
                      "quantity": "",
                      "statusModal": "modal",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction],
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": "Confirm",
                          "mealName": "",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": true,
                          "orderId": "",
                          "price": "",
                          "quantity": "",
                          "statusModal": "modal",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={true}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={true}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should respond to a mouse hover event and dislay a poppover 2`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction],
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": "Confirm",
                      "mealName": "",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": "",
                      "price": "",
                      "quantity": "",
                      "statusModal": "modal",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction],
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": "Confirm",
                          "mealName": "",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": "",
                          "price": "",
                          "quantity": "",
                          "statusModal": "modal",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should respond to cancelOrder functions 1`] = `
Orders {
  "cancelOrder": [Function],
  "confirmStatus": [Function],
  "context": Object {},
  "handleClick": [Function],
  "handleClose": [Function],
  "modify": [Function],
  "onChange": [Function],
  "props": Object {
    "actions": Object {
      "clearMessages": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "getNotifications": [MockFunction],
      "getUser": [MockFunction],
      "refreshToken": [MockFunction],
      "updateProfile": [MockFunction],
      "upgrade": [MockFunction],
    },
    "confirmOrder": [MockFunction],
    "errorMessage": Object {
      "createMealError": "Wrong credentials",
      "updateError": "error on update",
    },
    "mealActions": Object {
      "getAllMeals": [MockFunction],
      "loadMostOrderedMeal": [MockFunction],
    },
    "meals": Array [
      Object {
        "descrption": "Very delicious",
        "id": 1,
        "name": "rice",
        "price": "200",
      },
      Object {
        "descrption": "Very delicious",
        "id": 2,
        "name": "beans",
        "price": "200",
      },
    ],
    "menu": Array [
      Object {
        "Meals": Array [
          Object {
            "desctription": "good",
            "id": 1,
            "name": "jollof",
            "price": 100,
          },
        ],
        "User": Object {
          "email": "ken@gmail.com",
          "name": "ken",
          "usrername": "ken",
        },
        "id": 1,
      },
    ],
    "menuActions": Object {
      "getAllOrders": [MockFunction],
      "getMenu": [MockFunction],
    },
    "myOrder": Array [
      Object {
        "Meal": Object {
          "descrption": "Very delicious",
          "id": 1,
          "name": "rice",
          "price": "200",
        },
        "address": "Reverend Street",
        "createdAt": "2018-05-4",
        "id": 1,
        "quantity": 3,
        "status": "pending",
        "updatedAt": "2018-05-4",
      },
    ],
    "notifics": Array [
      Object {
        "createdAt": "2018-06-10",
        "id": 1,
        "message": "here i come",
        "updatedAt": "2018-06-10",
      },
    ],
    "orderActions": Object {
      "confirmStatus": [MockFunction],
      "getMyOrder": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "orderMeal": [MockFunction],
      "updateOrder": [MockFunction],
    },
    "successMessage": Object {
      "createMealSuccess": "meal created",
      "updateProfileSuccess": "updated",
      "upgradeSuccess": " good",
    },
    "user": Object {
      "email": "ken@gmaoil.com",
      "id": 1,
      "image": "image_url",
      "name": "kenny",
      "username": "ken",
    },
  },
  "refs": Object {},
  "state": Object {
    "address": "",
    "confirmButton": "Confirm",
    "mealName": "",
    "modal": "modal",
    "modifyError": "error on update",
    "modifyOrder": "Modify",
    "open": false,
    "orderId": "",
    "price": "",
    "quantity": "",
    "statusModal": "modal",
    "totalPrice": "",
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_element": <Orders
        actions={
          Object {
            "clearMessages": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "getNotifications": [MockFunction],
            "getUser": [MockFunction],
            "refreshToken": [MockFunction],
            "updateProfile": [MockFunction],
            "upgrade": [MockFunction],
          }
        }
        confirmOrder={[MockFunction]}
        errorMessage={
          Object {
            "createMealError": "Wrong credentials",
            "updateError": "error on update",
          }
        }
        mealActions={
          Object {
            "getAllMeals": [MockFunction],
            "loadMostOrderedMeal": [MockFunction],
          }
        }
        meals={
          Array [
            Object {
              "descrption": "Very delicious",
              "id": 1,
              "name": "rice",
              "price": "200",
            },
            Object {
              "descrption": "Very delicious",
              "id": 2,
              "name": "beans",
              "price": "200",
            },
          ]
        }
        menu={
          Array [
            Object {
              "Meals": Array [
                Object {
                  "desctription": "good",
                  "id": 1,
                  "name": "jollof",
                  "price": 100,
                },
              ],
              "User": Object {
                "email": "ken@gmail.com",
                "name": "ken",
                "usrername": "ken",
              },
              "id": 1,
            },
          ]
        }
        menuActions={
          Object {
            "getAllOrders": [MockFunction],
            "getMenu": [MockFunction],
          }
        }
        myOrder={
          Array [
            Object {
              "Meal": Object {
                "descrption": "Very delicious",
                "id": 1,
                "name": "rice",
                "price": "200",
              },
              "address": "Reverend Street",
              "createdAt": "2018-05-4",
              "id": 1,
              "quantity": 3,
              "status": "pending",
              "updatedAt": "2018-05-4",
            },
          ]
        }
        notifics={
          Array [
            Object {
              "createdAt": "2018-06-10",
              "id": 1,
              "message": "here i come",
              "updatedAt": "2018-06-10",
            },
          ]
        }
        orderActions={
          Object {
            "confirmStatus": [MockFunction],
            "getMyOrder": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "orderMeal": [MockFunction],
            "updateOrder": [MockFunction],
          }
        }
        successMessage={
          Object {
            "createMealSuccess": "meal created",
            "updateProfileSuccess": "updated",
            "upgradeSuccess": " good",
          }
        }
        user={
          Object {
            "email": "ken@gmaoil.com",
            "id": 1,
            "image": "image_url",
            "name": "kenny",
            "username": "ken",
          }
        }
      />,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_newState": Object {
        "address": "",
        "confirmButton": "Confirm",
        "mealName": "",
        "modal": "modal",
        "modifyError": "error on update",
        "modifyOrder": "Modify",
        "open": false,
        "orderId": "",
        "price": "",
        "quantity": "",
        "statusModal": "modal",
        "totalPrice": "",
      },
      "_rendered": <div
        className="order-wrapper order-container"
      >
        <div
          style={
            Object {
              "margin": "1rem 1rem 1rem 1rem",
            }
          }
        >
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
              style={
                Object {
                  "margin": "1rem 1rem 1rem 1rem",
                }
              }
            >
              <p
                className="justify l-r-pad-text"
              >
                 Confirm that you have received  
                
              </p>
            </div>
            <div
              className="modal-order-content"
            >
              <button
                className="remove-modal confirmStatus"
                onClick={[Function]}
              >
                Confirm
              </button>
              <button
                className="remove-modal"
                onClick={[Function]}
              >
                Cancel
              </button>
            </div>
          </div>
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
            >
              <p
                className="justify l-r-pad-text"
              >
                Edit the field to modify this order
                <br />
                NB This order can only be modified 
                <br />
                within ONE hour after it is created
                <h4
                  className="danger text-center"
                >
                  error on update
                </h4>
              </p>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Name: 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Price per Meal(#): 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Quantity: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="quantity"
                  name="quantity"
                  onChange={[Function]}
                  type="number"
                  value=""
                />
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text address"
              >
                 Address: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="address"
                  name="address"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </span>
            </div>
            <div
              className="modal-order-content"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal modify"
                  onClick={[Function]}
                >
                  Modify
                </button>
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal cancel"
                  onClick={[Function]}
                >
                  Cancel
                </button>
              </span>
            </div>
          </div>
          <h2
            style={
              Object {
                "marginTop": "4rem",
              }
            }
          >
            MY MEAL ORDER HISTORY
          </h2>
          <h3
            className="danger text-center"
          >
            <b />
          </h3>
          <table>
            <tbody>
              <tr>
                <th>
                  id
                </th>
                <th>
                  Name
                </th>
                <th>
                  Quanitity odered
                </th>
                <th>
                  Price ($)
                </th>
                <th>
                  Total price ( price * quantity)
                </th>
                <td>
                  Date
                </td>
                <td>
                  Address
                </td>
                <td>
                  Status
                </td>
                <td>
                  Modify
                </td>
              </tr>
              <tr>
                <td>
                  1
                </td>
                <td>
                  rice
                </td>
                <td>
                  3
                </td>
                <td>
                  200
                </td>
                <td />
                <td>
                  May
                    
                  4
                    
                  2018
                </td>
                <td>
                  Reverend Street
                </td>
                <td>
                  <span>
                    pending
                    <button
                      className="y-color confirm-btn"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                    >
                      Confirm
                    </button>
                    <Popover
                      container={[Circular]}
                      hideWithOutsideClick={true}
                      onHide={[Function]}
                      placement="top"
                      show={false}
                    >
                      <p
                        className="p-color"
                      >
                        Confirm Meal Delivery
                      </p>
                    </Popover>
                  </span>
                </td>
                <td>
                  <button
                    className="p-color modify-btn"
                    onClick={[Function]}
                  >
                    Modify
                  </button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>,
      "_rendering": false,
      "_updater": [Circular],
    },
  },
}
`;

exports[`Test order component of dashboard should respond to cancelOrder functions 2`] = `
Orders {
  "cancelOrder": [Function],
  "confirmStatus": [Function],
  "context": Object {},
  "handleClick": [Function],
  "handleClose": [Function],
  "modify": [Function],
  "onChange": [Function],
  "props": Object {
    "actions": Object {
      "clearMessages": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "getNotifications": [MockFunction],
      "getUser": [MockFunction],
      "refreshToken": [MockFunction],
      "updateProfile": [MockFunction],
      "upgrade": [MockFunction],
    },
    "confirmOrder": [MockFunction],
    "errorMessage": Object {
      "createMealError": "Wrong credentials",
      "updateError": "error on update",
    },
    "mealActions": Object {
      "getAllMeals": [MockFunction],
      "loadMostOrderedMeal": [MockFunction],
    },
    "meals": Array [
      Object {
        "descrption": "Very delicious",
        "id": 1,
        "name": "rice",
        "price": "200",
      },
      Object {
        "descrption": "Very delicious",
        "id": 2,
        "name": "beans",
        "price": "200",
      },
    ],
    "menu": Array [
      Object {
        "Meals": Array [
          Object {
            "desctription": "good",
            "id": 1,
            "name": "jollof",
            "price": 100,
          },
        ],
        "User": Object {
          "email": "ken@gmail.com",
          "name": "ken",
          "usrername": "ken",
        },
        "id": 1,
      },
    ],
    "menuActions": Object {
      "getAllOrders": [MockFunction],
      "getMenu": [MockFunction],
    },
    "myOrder": Array [
      Object {
        "Meal": Object {
          "descrption": "Very delicious",
          "id": 1,
          "name": "rice",
          "price": "200",
        },
        "address": "Reverend Street",
        "createdAt": "2018-05-4",
        "id": 1,
        "quantity": 3,
        "status": "pending",
        "updatedAt": "2018-05-4",
      },
    ],
    "notifics": Array [
      Object {
        "createdAt": "2018-06-10",
        "id": 1,
        "message": "here i come",
        "updatedAt": "2018-06-10",
      },
    ],
    "orderActions": Object {
      "confirmStatus": [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "getMyOrder": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "orderMeal": [MockFunction],
      "updateOrder": [MockFunction],
    },
    "successMessage": Object {
      "createMealSuccess": "meal created",
      "updateProfileSuccess": "updated",
      "upgradeSuccess": " good",
    },
    "user": Object {
      "email": "ken@gmaoil.com",
      "id": 1,
      "image": "image_url",
      "name": "kenny",
      "username": "ken",
    },
  },
  "refs": Object {},
  "state": Object {
    "address": "",
    "confirmButton": <div>
      <i
        aria-hidden="true"
        className="fa fa-spinner fa-spin fa-2x fa-fw"
      />
    </div>,
    "mealName": "",
    "modal": "modal",
    "modifyError": "error on update",
    "modifyOrder": "Modify",
    "open": false,
    "orderId": "",
    "price": "",
    "quantity": "",
    "statusModal": "modal",
    "totalPrice": "",
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_element": <Orders
        actions={
          Object {
            "clearMessages": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "getNotifications": [MockFunction],
            "getUser": [MockFunction],
            "refreshToken": [MockFunction],
            "updateProfile": [MockFunction],
            "upgrade": [MockFunction],
          }
        }
        confirmOrder={[MockFunction]}
        errorMessage={
          Object {
            "createMealError": "Wrong credentials",
            "updateError": "error on update",
          }
        }
        mealActions={
          Object {
            "getAllMeals": [MockFunction],
            "loadMostOrderedMeal": [MockFunction],
          }
        }
        meals={
          Array [
            Object {
              "descrption": "Very delicious",
              "id": 1,
              "name": "rice",
              "price": "200",
            },
            Object {
              "descrption": "Very delicious",
              "id": 2,
              "name": "beans",
              "price": "200",
            },
          ]
        }
        menu={
          Array [
            Object {
              "Meals": Array [
                Object {
                  "desctription": "good",
                  "id": 1,
                  "name": "jollof",
                  "price": 100,
                },
              ],
              "User": Object {
                "email": "ken@gmail.com",
                "name": "ken",
                "usrername": "ken",
              },
              "id": 1,
            },
          ]
        }
        menuActions={
          Object {
            "getAllOrders": [MockFunction],
            "getMenu": [MockFunction],
          }
        }
        myOrder={
          Array [
            Object {
              "Meal": Object {
                "descrption": "Very delicious",
                "id": 1,
                "name": "rice",
                "price": "200",
              },
              "address": "Reverend Street",
              "createdAt": "2018-05-4",
              "id": 1,
              "quantity": 3,
              "status": "pending",
              "updatedAt": "2018-05-4",
            },
          ]
        }
        notifics={
          Array [
            Object {
              "createdAt": "2018-06-10",
              "id": 1,
              "message": "here i come",
              "updatedAt": "2018-06-10",
            },
          ]
        }
        orderActions={
          Object {
            "confirmStatus": [MockFunction] {
              "calls": Array [
                Array [
                  "",
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "getMyOrder": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "orderMeal": [MockFunction],
            "updateOrder": [MockFunction],
          }
        }
        successMessage={
          Object {
            "createMealSuccess": "meal created",
            "updateProfileSuccess": "updated",
            "upgradeSuccess": " good",
          }
        }
        user={
          Object {
            "email": "ken@gmaoil.com",
            "id": 1,
            "image": "image_url",
            "name": "kenny",
            "username": "ken",
          }
        }
      />,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_newState": Object {
        "address": "",
        "confirmButton": <div>
          <i
            aria-hidden="true"
            className="fa fa-spinner fa-spin fa-2x fa-fw"
          />
        </div>,
        "mealName": "",
        "modal": "modal",
        "modifyError": "error on update",
        "modifyOrder": "Modify",
        "open": false,
        "orderId": "",
        "price": "",
        "quantity": "",
        "statusModal": "modal",
        "totalPrice": "",
      },
      "_rendered": <div
        className="order-wrapper order-container"
      >
        <div
          style={
            Object {
              "margin": "1rem 1rem 1rem 1rem",
            }
          }
        >
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
              style={
                Object {
                  "margin": "1rem 1rem 1rem 1rem",
                }
              }
            >
              <p
                className="justify l-r-pad-text"
              >
                 Confirm that you have received  
                
              </p>
            </div>
            <div
              className="modal-order-content"
            >
              <button
                className="remove-modal confirmStatus"
                onClick={[Function]}
              >
                <div>
                  <i
                    aria-hidden="true"
                    className="fa fa-spinner fa-spin fa-2x fa-fw"
                  />
                </div>
              </button>
              <button
                className="remove-modal"
                onClick={[Function]}
              >
                Cancel
              </button>
            </div>
          </div>
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
            >
              <p
                className="justify l-r-pad-text"
              >
                Edit the field to modify this order
                <br />
                NB This order can only be modified 
                <br />
                within ONE hour after it is created
                <h4
                  className="danger text-center"
                >
                  error on update
                </h4>
              </p>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Name: 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Price per Meal(#): 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Quantity: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="quantity"
                  name="quantity"
                  onChange={[Function]}
                  type="number"
                  value=""
                />
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text address"
              >
                 Address: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="address"
                  name="address"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </span>
            </div>
            <div
              className="modal-order-content"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal modify"
                  onClick={[Function]}
                >
                  Modify
                </button>
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal cancel"
                  onClick={[Function]}
                >
                  Cancel
                </button>
              </span>
            </div>
          </div>
          <h2
            style={
              Object {
                "marginTop": "4rem",
              }
            }
          >
            MY MEAL ORDER HISTORY
          </h2>
          <h3
            className="danger text-center"
          >
            <b />
          </h3>
          <table>
            <tbody>
              <tr>
                <th>
                  id
                </th>
                <th>
                  Name
                </th>
                <th>
                  Quanitity odered
                </th>
                <th>
                  Price ($)
                </th>
                <th>
                  Total price ( price * quantity)
                </th>
                <td>
                  Date
                </td>
                <td>
                  Address
                </td>
                <td>
                  Status
                </td>
                <td>
                  Modify
                </td>
              </tr>
              <tr>
                <td>
                  1
                </td>
                <td>
                  rice
                </td>
                <td>
                  3
                </td>
                <td>
                  200
                </td>
                <td />
                <td>
                  May
                    
                  4
                    
                  2018
                </td>
                <td>
                  Reverend Street
                </td>
                <td>
                  <span>
                    pending
                    <button
                      className="y-color confirm-btn"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                    >
                      Confirm
                    </button>
                    <Popover
                      container={[Circular]}
                      hideWithOutsideClick={true}
                      onHide={[Function]}
                      placement="top"
                      show={false}
                    >
                      <p
                        className="p-color"
                      >
                        Confirm Meal Delivery
                      </p>
                    </Popover>
                  </span>
                </td>
                <td>
                  <button
                    className="p-color modify-btn"
                    onClick={[Function]}
                  >
                    Modify
                  </button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>,
      "_rendering": false,
      "_updater": [Circular],
    },
  },
}
`;

exports[`Test order component of dashboard should respond to mapDispatchToProps methods 1`] = `
Object {
  "actions": Object {
    "clearMessages": [Function],
    "getNotifications": [Function],
    "getUser": [Function],
    "loadErrorMessage": [Function],
    "loadMostOrdered": [Function],
    "loadMostOrderedMeal": [Function],
    "loadNotifications": [Function],
    "loadSuccessMessage": [Function],
    "loadUser": [Function],
    "login": [Function],
    "refreshToken": [Function],
    "register": [Function],
    "resetLink": [Function],
    "updateProfile": [Function],
    "upgrade": [Function],
  },
  "orderActions": Object {
    "confirmStatus": [Function],
    "getAllOrders": [Function],
    "getMyOrder": [Function],
    "loadAllOrder": [Function],
    "loadErrorMessage": [Function],
    "loadMostOrdered": [Function],
    "loadMyOrder": [Function],
    "loadSuccessMessage": [Function],
    "loadTodayMenu": [Function],
    "orderMeal": [Function],
    "updateOrder": [Function],
  },
}
`;

exports[`Test order component of dashboard should respond to mapStateToProps methods 1`] = `
Object {
  "errorMessage": Object {
    "createMealError": "Wrong credentials",
    "updateError": "error on update",
  },
  "myOrder": Array [
    Object {
      "Meal": Object {
        "descrption": "Very delicious",
        "id": 1,
        "name": "rice",
        "price": "200",
      },
      "address": "Reverend Street",
      "createdAt": "2018-05-4",
      "id": 1,
      "quantity": 3,
      "status": "pending",
      "updatedAt": "2018-05-4",
    },
  ],
  "successMessage": Object {
    "createMealSuccess": "meal created",
    "updateProfileSuccess": "updated",
    "upgradeSuccess": " good",
  },
}
`;

exports[`Test order component of dashboard should respond to modify functions 1`] = `
<div
  className="order-wrapper order-container"
>
  <div
    style={
      Object {
        "margin": "1rem 1rem 1rem 1rem",
      }
    }
  >
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
        style={
          Object {
            "margin": "1rem 1rem 1rem 1rem",
          }
        }
      >
        <p
          className="justify l-r-pad-text"
        >
           Confirm that you have received  
        </p>
      </div>
      <div
        className="modal-order-content"
      >
        <button
          className="remove-modal confirmStatus"
          onClick={[Function]}
        >
          Confirm
        </button>
        <button
          className="remove-modal"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </div>
    <div
      className="modal-order modal"
    >
      <button
        className="remove-modal"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "display": "block",
            "float": "right",
          }
        }
      >
        ×
      </button>
      <div
        className="modal-order-content"
      >
        <p
          className="justify l-r-pad-text"
        >
          Edit the field to modify this order
          <br />
          NB This order can only be modified 
          <br />
          within ONE hour after it is created
          <h4
            className="danger text-center"
          >
            error on update
          </h4>
        </p>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Name: 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Price per Meal(#): 
        </span>
        <span
          className="modal-order-items "
        />
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
           Quantity: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="quantity"
            name="quantity"
            onChange={[Function]}
            type="number"
            value=""
          />
        </span>
      </div>
      <div
        className="justify-overide"
      >
        <span
          className="modal-order-items l-r-pad-text address"
        >
           Address: 
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <input
            id="address"
            name="address"
            onChange={[Function]}
            type="text"
            value=""
          />
        </span>
      </div>
      <div
        className="modal-order-content"
      >
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal modify"
            onClick={[Function]}
          >
            Modify
          </button>
        </span>
        <span
          className="modal-order-items l-r-pad-text"
        >
          <button
            className="remove-modal cancel"
            onClick={[Function]}
          >
            Cancel
          </button>
        </span>
      </div>
    </div>
    <h2
      style={
        Object {
          "marginTop": "4rem",
        }
      }
    >
      MY MEAL ORDER HISTORY
    </h2>
    <h3
      className="danger text-center"
    >
      <b />
    </h3>
    <table>
      <tbody>
        <tr>
          <th>
            id
          </th>
          <th>
            Name
          </th>
          <th>
            Quanitity odered
          </th>
          <th>
            Price ($)
          </th>
          <th>
            Total price ( price * quantity)
          </th>
          <td>
            Date
          </td>
          <td>
            Address
          </td>
          <td>
            Status
          </td>
          <td>
            Modify
          </td>
        </tr>
        <tr
          key="1"
        >
          <td>
            1
          </td>
          <td>
            rice
          </td>
          <td>
            3
          </td>
          <td>
            200
          </td>
          <td />
          <td>
            May
              
            4
              
            2018
          </td>
          <td>
            Reverend Street
          </td>
          <td>
            <span>
              pending
              <button
                className="y-color confirm-btn"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              >
                Confirm
              </button>
              <Popover
                container={
                  Orders {
                    "cancelOrder": [Function],
                    "confirmStatus": [Function],
                    "context": Object {},
                    "handleClick": [Function],
                    "handleClose": [Function],
                    "modify": [Function],
                    "onChange": [Function],
                    "props": Object {
                      "actions": Object {
                        "clearMessages": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "getNotifications": [MockFunction],
                        "getUser": [MockFunction],
                        "refreshToken": [MockFunction],
                        "updateProfile": [MockFunction],
                        "upgrade": [MockFunction],
                      },
                      "confirmOrder": [MockFunction],
                      "errorMessage": Object {
                        "createMealError": "Wrong credentials",
                        "updateError": "error on update",
                      },
                      "mealActions": Object {
                        "getAllMeals": [MockFunction],
                        "loadMostOrderedMeal": [MockFunction],
                      },
                      "meals": Array [
                        Object {
                          "descrption": "Very delicious",
                          "id": 1,
                          "name": "rice",
                          "price": "200",
                        },
                        Object {
                          "descrption": "Very delicious",
                          "id": 2,
                          "name": "beans",
                          "price": "200",
                        },
                      ],
                      "menu": Array [
                        Object {
                          "Meals": Array [
                            Object {
                              "desctription": "good",
                              "id": 1,
                              "name": "jollof",
                              "price": 100,
                            },
                          ],
                          "User": Object {
                            "email": "ken@gmail.com",
                            "name": "ken",
                            "usrername": "ken",
                          },
                          "id": 1,
                        },
                      ],
                      "menuActions": Object {
                        "getAllOrders": [MockFunction],
                        "getMenu": [MockFunction],
                      },
                      "myOrder": Array [
                        Object {
                          "Meal": Object {
                            "descrption": "Very delicious",
                            "id": 1,
                            "name": "rice",
                            "price": "200",
                          },
                          "address": "Reverend Street",
                          "createdAt": "2018-05-4",
                          "id": 1,
                          "quantity": 3,
                          "status": "pending",
                          "updatedAt": "2018-05-4",
                        },
                      ],
                      "notifics": Array [
                        Object {
                          "createdAt": "2018-06-10",
                          "id": 1,
                          "message": "here i come",
                          "updatedAt": "2018-06-10",
                        },
                      ],
                      "orderActions": Object {
                        "confirmStatus": [MockFunction],
                        "getMyOrder": [MockFunction] {
                          "calls": Array [
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                            Object {
                              "isThrow": false,
                              "value": undefined,
                            },
                          ],
                        },
                        "orderMeal": [MockFunction],
                        "updateOrder": [MockFunction],
                      },
                      "successMessage": Object {
                        "createMealSuccess": "meal created",
                        "updateProfileSuccess": "updated",
                        "upgradeSuccess": " good",
                      },
                      "user": Object {
                        "email": "ken@gmaoil.com",
                        "id": 1,
                        "image": "image_url",
                        "name": "kenny",
                        "username": "ken",
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "address": "",
                      "confirmButton": "Confirm",
                      "mealName": "",
                      "modal": "modal",
                      "modifyError": "error on update",
                      "modifyOrder": "Modify",
                      "open": false,
                      "orderId": "",
                      "price": "",
                      "quantity": "",
                      "statusModal": "modal",
                      "totalPrice": "",
                    },
                    "updater": Updater {
                      "_callbacks": Array [],
                      "_renderer": ReactShallowRenderer {
                        "_context": Object {},
                        "_element": <Orders
                          actions={
                            Object {
                              "clearMessages": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getNotifications": [MockFunction],
                              "getUser": [MockFunction],
                              "refreshToken": [MockFunction],
                              "updateProfile": [MockFunction],
                              "upgrade": [MockFunction],
                            }
                          }
                          confirmOrder={[MockFunction]}
                          errorMessage={
                            Object {
                              "createMealError": "Wrong credentials",
                              "updateError": "error on update",
                            }
                          }
                          mealActions={
                            Object {
                              "getAllMeals": [MockFunction],
                              "loadMostOrderedMeal": [MockFunction],
                            }
                          }
                          meals={
                            Array [
                              Object {
                                "descrption": "Very delicious",
                                "id": 1,
                                "name": "rice",
                                "price": "200",
                              },
                              Object {
                                "descrption": "Very delicious",
                                "id": 2,
                                "name": "beans",
                                "price": "200",
                              },
                            ]
                          }
                          menu={
                            Array [
                              Object {
                                "Meals": Array [
                                  Object {
                                    "desctription": "good",
                                    "id": 1,
                                    "name": "jollof",
                                    "price": 100,
                                  },
                                ],
                                "User": Object {
                                  "email": "ken@gmail.com",
                                  "name": "ken",
                                  "usrername": "ken",
                                },
                                "id": 1,
                              },
                            ]
                          }
                          menuActions={
                            Object {
                              "getAllOrders": [MockFunction],
                              "getMenu": [MockFunction],
                            }
                          }
                          myOrder={
                            Array [
                              Object {
                                "Meal": Object {
                                  "descrption": "Very delicious",
                                  "id": 1,
                                  "name": "rice",
                                  "price": "200",
                                },
                                "address": "Reverend Street",
                                "createdAt": "2018-05-4",
                                "id": 1,
                                "quantity": 3,
                                "status": "pending",
                                "updatedAt": "2018-05-4",
                              },
                            ]
                          }
                          notifics={
                            Array [
                              Object {
                                "createdAt": "2018-06-10",
                                "id": 1,
                                "message": "here i come",
                                "updatedAt": "2018-06-10",
                              },
                            ]
                          }
                          orderActions={
                            Object {
                              "confirmStatus": [MockFunction],
                              "getMyOrder": [MockFunction] {
                                "calls": Array [
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                  Array [],
                                ],
                                "results": Array [
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                  Object {
                                    "isThrow": false,
                                    "value": undefined,
                                  },
                                ],
                              },
                              "orderMeal": [MockFunction],
                              "updateOrder": [MockFunction],
                            }
                          }
                          successMessage={
                            Object {
                              "createMealSuccess": "meal created",
                              "updateProfileSuccess": "updated",
                              "upgradeSuccess": " good",
                            }
                          }
                          user={
                            Object {
                              "email": "ken@gmaoil.com",
                              "id": 1,
                              "image": "image_url",
                              "name": "kenny",
                              "username": "ken",
                            }
                          }
                        />,
                        "_forcedUpdate": false,
                        "_instance": [Circular],
                        "_newState": Object {
                          "address": "",
                          "confirmButton": "Confirm",
                          "mealName": "",
                          "modal": "modal",
                          "modifyError": "error on update",
                          "modifyOrder": "Modify",
                          "open": false,
                          "orderId": "",
                          "price": "",
                          "quantity": "",
                          "statusModal": "modal",
                          "totalPrice": "",
                        },
                        "_rendered": <div
                          className="order-wrapper order-container"
                        >
                          <div
                            style={
                              Object {
                                "margin": "1rem 1rem 1rem 1rem",
                              }
                            }
                          >
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                                style={
                                  Object {
                                    "margin": "1rem 1rem 1rem 1rem",
                                  }
                                }
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                   Confirm that you have received  
                                  
                                </p>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <button
                                  className="remove-modal confirmStatus"
                                  onClick={[Function]}
                                >
                                  Confirm
                                </button>
                                <button
                                  className="remove-modal"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </button>
                              </div>
                            </div>
                            <div
                              className="modal-order modal"
                            >
                              <button
                                className="remove-modal"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "red",
                                    "display": "block",
                                    "float": "right",
                                  }
                                }
                              >
                                ×
                              </button>
                              <div
                                className="modal-order-content"
                              >
                                <p
                                  className="justify l-r-pad-text"
                                >
                                  Edit the field to modify this order
                                  <br />
                                  NB This order can only be modified 
                                  <br />
                                  within ONE hour after it is created
                                  <h4
                                    className="danger text-center"
                                  >
                                    error on update
                                  </h4>
                                </p>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Name: 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Price per Meal(#): 
                                </span>
                                <span
                                  className="modal-order-items "
                                >
                                  
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                   Quantity: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="quantity"
                                    name="quantity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="justify-overide"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text address"
                                >
                                   Address: 
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <input
                                    id="address"
                                    name="address"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </span>
                              </div>
                              <div
                                className="modal-order-content"
                              >
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal modify"
                                    onClick={[Function]}
                                  >
                                    Modify
                                  </button>
                                </span>
                                <span
                                  className="modal-order-items l-r-pad-text"
                                >
                                  <button
                                    className="remove-modal cancel"
                                    onClick={[Function]}
                                  >
                                    Cancel
                                  </button>
                                </span>
                              </div>
                            </div>
                            <h2
                              style={
                                Object {
                                  "marginTop": "4rem",
                                }
                              }
                            >
                              MY MEAL ORDER HISTORY
                            </h2>
                            <h3
                              className="danger text-center"
                            >
                              <b />
                            </h3>
                            <table>
                              <tbody>
                                <tr>
                                  <th>
                                    id
                                  </th>
                                  <th>
                                    Name
                                  </th>
                                  <th>
                                    Quanitity odered
                                  </th>
                                  <th>
                                    Price ($)
                                  </th>
                                  <th>
                                    Total price ( price * quantity)
                                  </th>
                                  <td>
                                    Date
                                  </td>
                                  <td>
                                    Address
                                  </td>
                                  <td>
                                    Status
                                  </td>
                                  <td>
                                    Modify
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    1
                                  </td>
                                  <td>
                                    rice
                                  </td>
                                  <td>
                                    3
                                  </td>
                                  <td>
                                    200
                                  </td>
                                  <td />
                                  <td>
                                    May
                                      
                                    4
                                      
                                    2018
                                  </td>
                                  <td>
                                    Reverend Street
                                  </td>
                                  <td>
                                    <span>
                                      pending
                                      <button
                                        className="y-color confirm-btn"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        Confirm
                                      </button>
                                      <Popover
                                        container={[Circular]}
                                        hideWithOutsideClick={true}
                                        onHide={[Function]}
                                        placement="top"
                                        show={false}
                                      >
                                        <p
                                          className="p-color"
                                        >
                                          Confirm Meal Delivery
                                        </p>
                                      </Popover>
                                    </span>
                                  </td>
                                  <td>
                                    <button
                                      className="p-color modify-btn"
                                      onClick={[Function]}
                                    >
                                      Modify
                                    </button>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>,
                        "_rendering": false,
                        "_updater": [Circular],
                      },
                    },
                  }
                }
                hideWithOutsideClick={true}
                onHide={[Function]}
                placement="top"
                show={false}
              >
                <p
                  className="p-color"
                >
                  Confirm Meal Delivery
                </p>
              </Popover>
            </span>
          </td>
          <td>
            <button
              className="p-color modify-btn"
              onClick={[Function]}
            >
              Modify
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Test order component of dashboard should respond to modify functions 2`] = `
Orders {
  "cancelOrder": [Function],
  "confirmStatus": [Function],
  "context": Object {},
  "handleClick": [Function],
  "handleClose": [Function],
  "modify": [Function],
  "onChange": [Function],
  "props": Object {
    "actions": Object {
      "clearMessages": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "getNotifications": [MockFunction],
      "getUser": [MockFunction],
      "refreshToken": [MockFunction],
      "updateProfile": [MockFunction],
      "upgrade": [MockFunction],
    },
    "confirmOrder": [MockFunction],
    "errorMessage": Object {
      "createMealError": "Wrong credentials",
      "updateError": "error on update",
    },
    "mealActions": Object {
      "getAllMeals": [MockFunction],
      "loadMostOrderedMeal": [MockFunction],
    },
    "meals": Array [
      Object {
        "descrption": "Very delicious",
        "id": 1,
        "name": "rice",
        "price": "200",
      },
      Object {
        "descrption": "Very delicious",
        "id": 2,
        "name": "beans",
        "price": "200",
      },
    ],
    "menu": Array [
      Object {
        "Meals": Array [
          Object {
            "desctription": "good",
            "id": 1,
            "name": "jollof",
            "price": 100,
          },
        ],
        "User": Object {
          "email": "ken@gmail.com",
          "name": "ken",
          "usrername": "ken",
        },
        "id": 1,
      },
    ],
    "menuActions": Object {
      "getAllOrders": [MockFunction],
      "getMenu": [MockFunction],
    },
    "myOrder": Array [
      Object {
        "Meal": Object {
          "descrption": "Very delicious",
          "id": 1,
          "name": "rice",
          "price": "200",
        },
        "address": "Reverend Street",
        "createdAt": "2018-05-4",
        "id": 1,
        "quantity": 3,
        "status": "pending",
        "updatedAt": "2018-05-4",
      },
    ],
    "notifics": Array [
      Object {
        "createdAt": "2018-06-10",
        "id": 1,
        "message": "here i come",
        "updatedAt": "2018-06-10",
      },
    ],
    "orderActions": Object {
      "confirmStatus": [MockFunction],
      "getMyOrder": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
      "orderMeal": [MockFunction],
      "updateOrder": [MockFunction],
    },
    "successMessage": Object {
      "createMealSuccess": "meal created",
      "updateProfileSuccess": "updated",
      "upgradeSuccess": " good",
    },
    "user": Object {
      "email": "ken@gmaoil.com",
      "id": 1,
      "image": "image_url",
      "name": "kenny",
      "username": "ken",
    },
  },
  "refs": Object {},
  "state": Object {
    "address": "",
    "confirmButton": "Confirm",
    "mealName": "",
    "modal": "modal",
    "modifyError": "error on update",
    "modifyOrder": "Modify",
    "open": false,
    "orderId": "",
    "price": "",
    "quantity": "",
    "statusModal": "modal",
    "totalPrice": "",
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_element": <Orders
        actions={
          Object {
            "clearMessages": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "getNotifications": [MockFunction],
            "getUser": [MockFunction],
            "refreshToken": [MockFunction],
            "updateProfile": [MockFunction],
            "upgrade": [MockFunction],
          }
        }
        confirmOrder={[MockFunction]}
        errorMessage={
          Object {
            "createMealError": "Wrong credentials",
            "updateError": "error on update",
          }
        }
        mealActions={
          Object {
            "getAllMeals": [MockFunction],
            "loadMostOrderedMeal": [MockFunction],
          }
        }
        meals={
          Array [
            Object {
              "descrption": "Very delicious",
              "id": 1,
              "name": "rice",
              "price": "200",
            },
            Object {
              "descrption": "Very delicious",
              "id": 2,
              "name": "beans",
              "price": "200",
            },
          ]
        }
        menu={
          Array [
            Object {
              "Meals": Array [
                Object {
                  "desctription": "good",
                  "id": 1,
                  "name": "jollof",
                  "price": 100,
                },
              ],
              "User": Object {
                "email": "ken@gmail.com",
                "name": "ken",
                "usrername": "ken",
              },
              "id": 1,
            },
          ]
        }
        menuActions={
          Object {
            "getAllOrders": [MockFunction],
            "getMenu": [MockFunction],
          }
        }
        myOrder={
          Array [
            Object {
              "Meal": Object {
                "descrption": "Very delicious",
                "id": 1,
                "name": "rice",
                "price": "200",
              },
              "address": "Reverend Street",
              "createdAt": "2018-05-4",
              "id": 1,
              "quantity": 3,
              "status": "pending",
              "updatedAt": "2018-05-4",
            },
          ]
        }
        notifics={
          Array [
            Object {
              "createdAt": "2018-06-10",
              "id": 1,
              "message": "here i come",
              "updatedAt": "2018-06-10",
            },
          ]
        }
        orderActions={
          Object {
            "confirmStatus": [MockFunction],
            "getMyOrder": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "orderMeal": [MockFunction],
            "updateOrder": [MockFunction],
          }
        }
        successMessage={
          Object {
            "createMealSuccess": "meal created",
            "updateProfileSuccess": "updated",
            "upgradeSuccess": " good",
          }
        }
        user={
          Object {
            "email": "ken@gmaoil.com",
            "id": 1,
            "image": "image_url",
            "name": "kenny",
            "username": "ken",
          }
        }
      />,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_newState": Object {
        "address": "",
        "confirmButton": "Confirm",
        "mealName": "",
        "modal": "modal",
        "modifyError": "error on update",
        "modifyOrder": "Modify",
        "open": false,
        "orderId": "",
        "price": "",
        "quantity": "",
        "statusModal": "modal",
        "totalPrice": "",
      },
      "_rendered": <div
        className="order-wrapper order-container"
      >
        <div
          style={
            Object {
              "margin": "1rem 1rem 1rem 1rem",
            }
          }
        >
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
              style={
                Object {
                  "margin": "1rem 1rem 1rem 1rem",
                }
              }
            >
              <p
                className="justify l-r-pad-text"
              >
                 Confirm that you have received  
                
              </p>
            </div>
            <div
              className="modal-order-content"
            >
              <button
                className="remove-modal confirmStatus"
                onClick={[Function]}
              >
                Confirm
              </button>
              <button
                className="remove-modal"
                onClick={[Function]}
              >
                Cancel
              </button>
            </div>
          </div>
          <div
            className="modal-order modal"
          >
            <button
              className="remove-modal"
              onClick={[Function]}
              style={
                Object {
                  "backgroundColor": "red",
                  "display": "block",
                  "float": "right",
                }
              }
            >
              ×
            </button>
            <div
              className="modal-order-content"
            >
              <p
                className="justify l-r-pad-text"
              >
                Edit the field to modify this order
                <br />
                NB This order can only be modified 
                <br />
                within ONE hour after it is created
                <h4
                  className="danger text-center"
                >
                  error on update
                </h4>
              </p>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Name: 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Price per Meal(#): 
              </span>
              <span
                className="modal-order-items "
              >
                
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                 Quantity: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="quantity"
                  name="quantity"
                  onChange={[Function]}
                  type="number"
                  value=""
                />
              </span>
            </div>
            <div
              className="justify-overide"
            >
              <span
                className="modal-order-items l-r-pad-text address"
              >
                 Address: 
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <input
                  id="address"
                  name="address"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </span>
            </div>
            <div
              className="modal-order-content"
            >
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal modify"
                  onClick={[Function]}
                >
                  Modify
                </button>
              </span>
              <span
                className="modal-order-items l-r-pad-text"
              >
                <button
                  className="remove-modal cancel"
                  onClick={[Function]}
                >
                  Cancel
                </button>
              </span>
            </div>
          </div>
          <h2
            style={
              Object {
                "marginTop": "4rem",
              }
            }
          >
            MY MEAL ORDER HISTORY
          </h2>
          <h3
            className="danger text-center"
          >
            <b />
          </h3>
          <table>
            <tbody>
              <tr>
                <th>
                  id
                </th>
                <th>
                  Name
                </th>
                <th>
                  Quanitity odered
                </th>
                <th>
                  Price ($)
                </th>
                <th>
                  Total price ( price * quantity)
                </th>
                <td>
                  Date
                </td>
                <td>
                  Address
                </td>
                <td>
                  Status
                </td>
                <td>
                  Modify
                </td>
              </tr>
              <tr>
                <td>
                  1
                </td>
                <td>
                  rice
                </td>
                <td>
                  3
                </td>
                <td>
                  200
                </td>
                <td />
                <td>
                  May
                    
                  4
                    
                  2018
                </td>
                <td>
                  Reverend Street
                </td>
                <td>
                  <span>
                    pending
                    <button
                      className="y-color confirm-btn"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                    >
                      Confirm
                    </button>
                    <Popover
                      container={[Circular]}
                      hideWithOutsideClick={true}
                      onHide={[Function]}
                      placement="top"
                      show={false}
                    >
                      <p
                        className="p-color"
                      >
                        Confirm Meal Delivery
                      </p>
                    </Popover>
                  </span>
                </td>
                <td>
                  <button
                    className="p-color modify-btn"
                    onClick={[Function]}
                  >
                    Modify
                  </button>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>,
      "_rendering": false,
      "_updater": [Circular],
    },
  },
}
`;
